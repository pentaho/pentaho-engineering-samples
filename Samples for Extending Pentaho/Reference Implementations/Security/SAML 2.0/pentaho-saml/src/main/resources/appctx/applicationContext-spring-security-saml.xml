<?xml version="1.0" encoding="UTF-8"?>
<!--===========================================================================
PENTAHO CORPORATION PROPRIETARY AND CONFIDENTIAL

Copyright 2002 - 2014 Pentaho Corporation (Pentaho). All rights reserved.

NOTICE: All information including source code contained herein is, and
remains the sole property of Pentaho and its licensors. The intellectual
and technical concepts contained herein are proprietary and confidential
to, and are trade secrets of Pentaho and may be covered by U.S. and foreign
patents, or patents in process, and are protected by trade secret and
copyright laws. The receipt or possession of this source code and/or related
information does not convey or imply any rights to reproduce, disclose or
distribute its contents, or to manufacture, use, or sell anything that it
may describe, in whole or in part. Any reproduction, modification, distribution,
or public display of this information without the express written authorization
from Pentaho is strictly prohibited and in violation of applicable laws and
international treaties. Access to the source code contained herein is strictly
prohibited to anyone except those individuals and entities who have executed
confidentiality and non-disclosure agreements or other agreements with Pentaho,
explicitly covering such access.
============================================================================-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:pen="http://www.pentaho.com/schema/pentaho-system"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.pentaho.com/schema/pentaho-system http://www.pentaho.com/schema/pentaho-system.xsd" default-lazy-init="true">

	<!-- ======================== FILTER CHAIN ======================= -->

	<!-- overridden from applicationContext-spring-security.xml to enable SAML -->
	<bean id="filterChainProxy" class="org.springframework.security.util.FilterChainProxy">
	    <property name="filterInvocationDefinitionSource">
	      <!--
	           You can safely remove the first pattern starting with /content/dashboards/print, if you're not using
	           Enterprise Dashboards or not allowing printing of Dashboards,
	       -->
	    	<value>
	        <![CDATA[CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
	        PATTERN_TYPE_APACHE_ANT
	        /api/repos/dashboards/print=securityContextHolderAwareRequestFilter,httpSessionPentahoSessionContextIntegrationFilter,httpSessionContextIntegrationFilter,preAuthenticatedSecurityFilter,httpSessionReuseDetectionFilter,logoutFilter,samlLogoutFilter,samlSingleLogoutFilter,samlMetadataGeneratorFilter,samlWebSSOProcessingFilter,authenticationProcessingFilter,basicProcessingFilter,requestParameterProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor
	        /webservices/**=securityContextHolderAwareRequestFilterForWS,httpSessionPentahoSessionContextIntegrationFilter,httpSessionContextIntegrationFilter,samlMetadataGeneratorFilter,samlWebSSOProcessingFilter,basicProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptorForWS
	        /api/**=securityContextHolderAwareRequestFilterForWS,httpSessionPentahoSessionContextIntegrationFilter,httpSessionContextIntegrationFilter,samlMetadataGeneratorFilter,samlWebSSOProcessingFilter,basicProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptorForWS
	        /plugin/**=securityContextHolderAwareRequestFilterForWS,httpSessionPentahoSessionContextIntegrationFilter,httpSessionContextIntegrationFilter,samlMetadataGeneratorFilter,samlWebSSOProcessingFilter,basicProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptorForWS
	        /**=securityContextHolderAwareRequestFilter,httpSessionPentahoSessionContextIntegrationFilter,httpSessionContextIntegrationFilter,httpSessionReuseDetectionFilter,logoutFilter,samlLogoutFilter,samlSingleLogoutFilter,samlMetadataGeneratorFilter,samlWebSSOProcessingFilter,authenticationProcessingFilter,basicProcessingFilter,requestParameterProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor]]>
	    	</value>
	    </property>
	</bean>


	<!-- 
		We override the filterInvocationInterceptor from applicationContext-spring-security.xml
		*only* to set the /Login url endpoint as requiring an authenticated user;

		Original: \A/login.*\Z=Anonymous,Authenticated
		Overriden: \A/login.*\Z=Authenticated
	-->
	<bean id="filterInvocationInterceptor"
        class="org.springframework.security.intercept.web.FilterSecurityInterceptor">
    <property name="authenticationManager">
      <ref bean="authenticationManager" />
    </property>
    <property name="accessDecisionManager">
      <ref local="httpRequestAccessDecisionManager" />
    </property>
    <property name="objectDefinitionSource">
      <value>
        <!--
            Note - the "=Nobody" below is saying that resource URLs with those
            patterns not be available through a web call.
        -->
        <![CDATA[
CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
\A/content/common-ui/resources/web/(.+/)*.+\.js.*\Z=Anonymous,Authenticated
\A/.*require-cfg.js.*\Z=Anonymous,Authenticated
\A/.*require-js-cfg.js.*\Z=Anonymous,Authenticated
\A/content/common-ui/resources/web/require.js.*\Z=Anonymous,Authenticated
\A/content/common-ui/resources/web/require-cfg.js.*\Z=Anonymous,Authenticated
\A/content/data-access/resources/gwt/.*css\Z=Anonymous,Authenticated
\A/webcontext.js.*\Z=Anonymous,Authenticated
\A/content/common-ui/resources/web/cache/cache-service.js.*\Z=Anonymous,Authenticated
\A/cacheexpirationservice.*\Z=Anonymous,Authenticated
\A/js/theme.*\Z=Anonymous,Authenticated
\A/content/common-ui/resources/themes/.*\Z=Anonymous,Authenticated
\A/content/common-ui/resources/web/dojo/djconfig.js.*\Z=Anonymous,Authenticated
\A/content/common-ui/resources/web/angular-directives/angular-directives.css\Z=Anonymous,Authenticated
\A/content/pentaho-mobile/resources/.*\Z=Anonymous,Authenticated
\A/docs/.*\Z=Anonymous,Authenticated
\A/mantlelogin/.*\Z=Anonymous,Authenticated
\A/mantle/mantleloginservice/*\Z=Anonymous,Authenticated
\A/mantle/.*\Z=Authenticated
\A/welcome/.*\Z=Anonymous,Authenticated
\A/public/.*\Z=Anonymous,Authenticated
\A/login.*\Z=Authenticated
\A/ping/alive.gif.*\Z=Anonymous,Authenticated
\A/j_spring_security_check.*\Z=Anonymous,Authenticated
\A/getimage.*\Z=Anonymous,Authenticated
\A/getresource.*\Z=Anonymous,Authenticated
\A/admin.*\Z=Admin
\A/auditreport.*\Z=Admin
\A/auditreportlist.*\Z=Admin
\A/versioncontrol.*\Z=Admin
\A/propertieseditor.*\Z=Admin
\A/propertiespanel.*\Z=Admin
\A/subscriptionadmin.*\Z=Admin
\A/resetrepository.*\Z=Admin
\A/viewaction.*solution.admin.*\Z=Admin
\A/scheduleradmin.*\Z=Admin
\A/publish.*\Z=Admin
\A/logout.*\Z=Anonymous
\A/solutionrepositoryservice.*component=delete.*solution=system.*\Z=Nobody
\A/solutionrepositoryservice.*solution=system.*component=delete.*\Z=Nobody
.*system.*pentaho.xml.*=Nobody
.*system.*applicationcontext.*.xml.*=Nobody
.*system.*pentahoobjects.spring.xml.*=Nobody
.*system.*pentahosystemconfig.xml.*=Nobody
.*system.*adminplugins.xml.*=Nobody
.*system.*plugin.properties.*=Nobody
.*system.*sessionstartupactions.xml.*=Nobody
.*system.*systemlisteners.xml.*=Nobody
.*system.*hibernate.*=Nobody
.*system.*birt/.*=Nobody
.*system.*dialects/.*=Nobody
.*system.*google/.*=Nobody
.*system.*jasperreports/.*=Nobody
.*system.*kettle/.*=Nobody
.*system.*logs/.*=Nobody
.*system.*mondrian/.*=Nobody
.*system.*quartz/.*=Nobody
.*system.*simple-jndi/.*=Nobody
.*system.*smtp-email/.*=Nobody
.*system.*ui/.*=Nobody
.*system.*\.\./.*=Nobody
\A/.*\Z=Authenticated
        ]]>
      </value>
    </property>
  </bean>

  <bean id="httpRequestAccessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
    <property name="allowIfAllAbstainDecisions" value="false" />
    <property name="decisionVoters">
      <list>
        <ref bean="roleVoter" />
      </list>
    </property>
  </bean>

	<!-- ===================== HTTP REQUEST SECURITY ==================== -->

	<!-- overridden from applicationContext-spring-security.xml -->
	<bean id="exceptionTranslationFilter" class="org.springframework.security.ui.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint">
			<ref bean="samlAuthenticationFilterEntryPoint" />
		</property>
		<property name="accessDeniedHandler">
			<bean class="org.springframework.security.ui.AccessDeniedHandlerImpl" />
		</property>
	</bean>

	<!-- overridden from applicationContext-spring-security.xml -->
	<bean id="logoutFilter" class="org.springframework.security.ui.logout.LogoutFilter">
		<constructor-arg value="/logout.jsp" /> <!-- URL redirected to after logout -->
		<constructor-arg>
			<list>
				<bean class="org.pentaho.platform.web.http.security.PentahoLogoutHandler" />
				<bean class="org.springframework.security.ui.logout.SecurityContextLogoutHandler" />
			</list>
		</constructor-arg>
		<property name="filterProcessesUrl" value="/platform/logout" />
	</bean>

	<bean id="authenticationManager" class="org.springframework.security.providers.ProviderManager">
	    <property name="providers">
	      <list>
	        <pen:bean class="org.springframework.security.providers.AuthenticationProvider"/>
	        <ref bean="anonymousAuthenticationProvider" />
	      </list>
	    </property>
	    <pen:publish as-type="INTERFACES" />
	</bean>

	<!-- ================================= -->
	<!--   SPRING-SECURITY-SAML FILTERS    -->
	<!-- ================================= -->

	<pen:bean id="samlAuthenticationFilterEntryPoint" class="org.springframework.security.ui.AuthenticationEntryPoint">
		<pen:attributes><pen:attr key="providerName" value="saml.authentication.entry.point"/></pen:attributes>
	</pen:bean>

	<pen:bean id="samlWebSSOProcessingFilter" class="javax.servlet.Filter">
	    <pen:attributes><pen:attr key="providerName" value="saml.filter.websso.processing"/></pen:attributes>
	</pen:bean>

	<pen:bean id="samlWebSSOHoKProcessingFilter" class="javax.servlet.Filter">
	    <pen:attributes><pen:attr key="providerName" value="saml.filter.websso.hok.processing"/></pen:attributes>
	</pen:bean>

	<pen:bean id="samlMetadataGeneratorFilter" class="javax.servlet.Filter">
	    <pen:attributes><pen:attr key="providerName" value="saml.filter.metadata.generator"/></pen:attributes>
	</pen:bean>

	<pen:bean id="samlLogoutFilter" class="javax.servlet.Filter">
	    <pen:attributes><pen:attr key="providerName" value="saml.filter.logout"/></pen:attributes>
	</pen:bean>

	<pen:bean id="samlSingleLogoutFilter" class="javax.servlet.Filter">
	    <pen:attributes><pen:attr key="providerName" value="saml.filter.single.logout"/></pen:attributes>
	</pen:bean>
	
</beans>
