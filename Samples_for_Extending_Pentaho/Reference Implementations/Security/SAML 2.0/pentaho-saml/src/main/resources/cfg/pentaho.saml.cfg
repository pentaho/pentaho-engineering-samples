# used in security.properties and applicationContext-spring-security-saml.xml
saml.id=saml

# IMPORTANT NOTE: we are *not* enabling IDP discovery, as that would add an extra layer of complexity to an 
# already complex POC of having SAML auth served via osgi bridge into a spring security 2 environment
saml.discovery.idp.enabled=false

#idp-discovery jsp not implemented
saml.idp.selection.jsp=N/A


# ############################# #
# service providers ( pentaho ) #
# ############################# #

# This is how we ( service provider ) will identify ourselves, when sending 
# the authentication request to the 3rd-party identification service
# PLEASE NOTE: entityId is case-sensitive 
saml.sp.metadata.entityId=pentaho

# Best practice is to have only one of the following 3 enabled;
# - if none is set (also possible), then we will fallback to a default metadata bundled in the jar file
# - if more than 1 is set, the first one holding a *valid* metadata resource path will be the one that will get used
#saml.sp.metadata.url=http://localhost:8080/pentaho-ssocircle-dev-sp.xml
#saml.sp.metadata.filesystem=/users/Work/saml/sp/pentaho-ssocircle-dev-sp.xml
saml.sp.metadata.classpath=/metadata/sp/pentaho-ssocircle-dev-sp.xml


# ############################################################ #
# identification providers ( ssocircle, okta, salesforce,... ) #
# ############################################################ #

# The url of the service we will be using as a identification provider
saml.idp.url=http://idp.ssocircle.com

# Best practice is to have only one of the following 3 enabled;
# - if none is set (also possible), then we will fallback to a default metadata bundled in the jar file
# - if more than 1 is set, the first one holding a *valid* metadata resource path will be the one that will get used
#saml.idp.metadata.url=http://idp.ssocircle.com/idp-meta.xml
#saml.idp.metadata.filesystem=/users/Work/saml/idp/ssocircle-idp-metadata.xml
saml.idp.metadata.classpath=/metadata/idp/ssocircle-idp-metadata.xml

# ############################# #
# idp contact settings			#
# ############################# #

# 1 day in secs
saml.valid.response.interval.in.secs=86400


# ############################### #
# user attributes mapped to roles #
# ############################### #

# SAML Credentials include a user, but it can also include a list of attributes for that user;
# One such attribute can hold within it a list of values which we can correlate to Pentaho Roles
saml.role.related.user.attribute.name=Pentaho Role

# (optional) some attribute values may come with a prefix that allows those to be identified between separate contexts
# Examples: 'Pentaho:Report Author', 'Zendesk:CTools Support', 'Office365:Contributor C1', 'Pentaho:Authenticated', ...
saml.role.related.user.attribute.prefix=Pentaho:

# ############################# #
# certificates keystore			#
# ############################# #

# Best practice is to have only one of the following 3 enabled;
# - if none is set (also possible), then we will fallback to a default keystore bundled in the jar file
# - if more than 1 is set, the first one holding a *valid* keystore resource path will be the one that will get used
#saml.keystore.url=http://idp.ssocircle.com/keystore.jks
#saml.keystore.filesystem=/users/Work/saml/keystores/keystore.jks
saml.keystore.classpath=/security/keystore.jks

# password to access the keystore, or empty for no password
saml.keystore.password=nalle123

# comma-separated list of 'username<saml.username.password.delimiter.char>password' used to access private keys
saml.keystore.private.username.passwords=apollo:nalle123,apollo01:nalle01

# delimiter char to be used in the comma-separated list of 'username<saml.username.password.delimiter.char>password'
saml.username.password.delimiter.char=:

# default key
saml.keystore.default.key=apollo

# ############################# #
# logout settings				#
# ############################# #

# redirect page on a logout request
logout.redirect.url=/platform/logout

# SAML best practices advise that all incoming/outgoing logout requests should be signed.
# ( SSOCircle.com, however, does not sign Single Logout requests )
# ( PingIdentity does not recognize signed Single Logout requests )
ensure.incoming.logout.request.signed=false
ensure.outgoing.logout.response.signed=true
ensure.outgoing.logout.request.signed=true

# one-of: true | false
#
# Local Logout: terminates only the local session and doesn't affect neither session at IDP, nor sessions at 
# other SPs where user logged in using single sign-on.
#
# Global Logout (a.k.a. Single Logout): terminates both session at the current SP, the IDP session and sessions 
# at other SPs connected to the same IDP session. Global logout (a.k.a. Single Logout) can be initialized from 
# any of the participating SPs or from the IdP itself.
#
# Important Note: not all IdPs support Global Logout (a.k.a. Single Logout)! Please check with your chosen IdP 
# if this is a supported feature. 
# Examples: SSOCircle.com supports Single Logout; Okta.com does not (http://developer.okta.com/docs/guides/oan_guidance.html)
use.global.logout.strategy=true

# one-of: saml | jdbc | memory
# 
# For authorization.providers other than 'saml', we'll look for published UserDetailsService / IUserRoleListService 
# beans ( even if these are non-osgi ones )
authorization.provider=saml

# When a username is not found in the authorization provider, should a user details
# object be created with the default role? Enabling this option can cause problems 
# with user details chained for the system admin role.
# default value is false - changing the value may cause problems with scheduled content
create.user.details.not.found.in.authorization.provider=false
      
# Should the Pentaho session authentication strategy be used when
# when a successful authentication is achieved?
use.pentaho.session.authentication.strategy=true

# LOAD BALANCER CONFIGURATION
# If the server will be behind a load balancer, server addressing properties must be
# specified so that any host can produce and validate messages. Set the following property
# to enable saml for servers behind a load balancer (ex. true | false)
saml.lb.enabled=false
      
# When the load balancer is enabled, provide server access url scheme (ex. http | https)
saml.lb.scheme=http
        
# When the load balancer is enabled, provide a value with the host address of the load balancer (ex. www.myserver.com)
saml.lb.server.name=localhost
        
# When the load balancer is enabled, provide a value of with the context path of the load balancer (ex. /)
saml.lb.context.path=/pentaho

#  When the load balancer is enabled, provide the port of the load balancer
saml.lb.server.port=8080

# When the load balancer is enabled, set if the port must be included in the address (ex. true | false)     
saml.lb.include.port.in.request.url=true
      
